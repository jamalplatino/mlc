package androidx.compose.material.icons.rounded;

import androidx.compose.material.icons.Icons;
import androidx.compose.ui.graphics.Brush;
import androidx.compose.ui.graphics.Color;
import androidx.compose.ui.graphics.SolidColor;
import androidx.compose.ui.graphics.StrokeCap;
import androidx.compose.ui.graphics.StrokeJoin;
import androidx.compose.ui.graphics.vector.ImageVector;
import androidx.compose.ui.graphics.vector.PathBuilder;
import androidx.compose.ui.graphics.vector.VectorKt;
import androidx.compose.ui.unit.Dp;
import kotlin.Metadata;
import kotlin.jvm.internal.DefaultConstructorMarker;
import kotlin.jvm.internal.Intrinsics;

@Metadata(d1 = {"\u0000\u0010\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\"\u0010\u0010\u0000\u001a\u0004\u0018\u00010\u0001X\u000e¢\u0006\u0002\n\u0000\"\u0015\u0010\u0002\u001a\u00020\u0001*\u00020\u00038F¢\u0006\u0006\u001a\u0004\b\u0004\u0010\u0005¨\u0006\u0006"}, d2 = {"_wbSunny", "Landroidx/compose/ui/graphics/vector/ImageVector;", "WbSunny", "Landroidx/compose/material/icons/Icons$Rounded;", "getWbSunny", "(Landroidx/compose/material/icons/Icons$Rounded;)Landroidx/compose/ui/graphics/vector/ImageVector;", "material-icons-extended-rounded_release"}, k = 2, mv = {1, 8, 0}, xi = 48)
/* compiled from: WbSunny.kt */
public final class WbSunnyKt {
    private static ImageVector _wbSunny;

    public static final ImageVector getWbSunny(Icons.Rounded rounded) {
        Intrinsics.checkNotNullParameter(rounded, "<this>");
        ImageVector imageVector = _wbSunny;
        if (imageVector != null) {
            Intrinsics.checkNotNull(imageVector);
            return imageVector;
        }
        ImageVector.Builder builder = r1;
        ImageVector.Builder builder2 = new ImageVector.Builder("Rounded.WbSunny", Dp.m5626constructorimpl(24.0f), Dp.m5626constructorimpl(24.0f), 24.0f, 24.0f, 0, 0, false, 224, (DefaultConstructorMarker) null);
        int r22 = StrokeCap.Companion.m3204getButtKaPHkGw();
        int r23 = StrokeJoin.Companion.m3214getBevelLxFBmk8();
        PathBuilder pathBuilder = new PathBuilder();
        pathBuilder.moveTo(6.05f, 4.14f);
        pathBuilder.lineToRelative(-0.39f, -0.39f);
        PathBuilder pathBuilder2 = pathBuilder;
        pathBuilder2.curveToRelative(-0.39f, -0.39f, -1.02f, -0.38f, -1.4f, 0.0f);
        pathBuilder.lineToRelative(-0.01f, 0.01f);
        pathBuilder2.curveToRelative(-0.39f, 0.39f, -0.39f, 1.02f, 0.0f, 1.4f);
        pathBuilder.lineToRelative(0.39f, 0.39f);
        pathBuilder2.curveToRelative(0.39f, 0.39f, 1.01f, 0.39f, 1.4f, 0.0f);
        pathBuilder.lineToRelative(0.01f, -0.01f);
        pathBuilder2.curveToRelative(0.39f, -0.38f, 0.39f, -1.02f, 0.0f, -1.4f);
        pathBuilder.close();
        pathBuilder.moveTo(3.01f, 10.5f);
        pathBuilder.lineTo(1.99f, 10.5f);
        PathBuilder pathBuilder3 = pathBuilder;
        pathBuilder3.curveToRelative(-0.55f, 0.0f, -0.99f, 0.44f, -0.99f, 0.99f);
        pathBuilder.verticalLineToRelative(0.01f);
        pathBuilder3.curveToRelative(0.0f, 0.55f, 0.44f, 0.99f, 0.99f, 0.99f);
        pathBuilder.lineTo(3.0f, 12.49f);
        PathBuilder pathBuilder4 = pathBuilder;
        pathBuilder4.curveToRelative(0.56f, 0.01f, 1.0f, -0.43f, 1.0f, -0.98f);
        pathBuilder.verticalLineToRelative(-0.01f);
        pathBuilder4.curveToRelative(0.0f, -0.56f, -0.44f, -1.0f, -0.99f, -1.0f);
        pathBuilder.close();
        pathBuilder.moveTo(12.01f, 0.55f);
        pathBuilder.lineTo(12.0f, 0.55f);
        PathBuilder pathBuilder5 = pathBuilder;
        pathBuilder5.curveToRelative(-0.56f, 0.0f, -1.0f, 0.44f, -1.0f, 0.99f);
        pathBuilder.verticalLineToRelative(0.96f);
        pathBuilder5.curveToRelative(0.0f, 0.55f, 0.44f, 0.99f, 0.99f, 0.99f);
        pathBuilder.lineTo(12.0f, 3.49f);
        pathBuilder.curveToRelative(0.56f, 0.01f, 1.0f, -0.43f, 1.0f, -0.98f);
        pathBuilder.verticalLineToRelative(-0.97f);
        pathBuilder.curveToRelative(0.0f, -0.55f, -0.44f, -0.99f, -0.99f, -0.99f);
        pathBuilder.close();
        pathBuilder.moveTo(19.75f, 3.76f);
        PathBuilder pathBuilder6 = pathBuilder;
        pathBuilder6.curveToRelative(-0.39f, -0.39f, -1.02f, -0.39f, -1.41f, -0.01f);
        pathBuilder.lineToRelative(-0.39f, 0.39f);
        pathBuilder6.curveToRelative(-0.39f, 0.39f, -0.39f, 1.02f, 0.0f, 1.4f);
        pathBuilder.lineToRelative(0.01f, 0.01f);
        pathBuilder6.curveToRelative(0.39f, 0.39f, 1.02f, 0.39f, 1.4f, 0.0f);
        pathBuilder.lineToRelative(0.39f, -0.39f);
        pathBuilder6.curveToRelative(0.39f, -0.39f, 0.39f, -1.01f, 0.0f, -1.4f);
        pathBuilder.close();
        pathBuilder.moveTo(17.94f, 18.86f);
        pathBuilder.lineToRelative(0.39f, 0.39f);
        PathBuilder pathBuilder7 = pathBuilder;
        pathBuilder7.curveToRelative(0.39f, 0.39f, 1.02f, 0.39f, 1.41f, 0.0f);
        pathBuilder7.curveToRelative(0.39f, -0.39f, 0.39f, -1.02f, 0.0f, -1.41f);
        pathBuilder.lineToRelative(-0.39f, -0.39f);
        pathBuilder7.curveToRelative(-0.39f, -0.39f, -1.02f, -0.38f, -1.4f, 0.0f);
        pathBuilder7.curveToRelative(-0.4f, 0.4f, -0.4f, 1.02f, -0.01f, 1.41f);
        pathBuilder.close();
        pathBuilder.moveTo(20.0f, 11.49f);
        pathBuilder.verticalLineToRelative(0.01f);
        pathBuilder.curveToRelative(0.0f, 0.55f, 0.44f, 0.99f, 0.99f, 0.99f);
        pathBuilder.lineTo(22.0f, 12.49f);
        PathBuilder pathBuilder8 = pathBuilder;
        pathBuilder8.curveToRelative(0.55f, 0.0f, 0.99f, -0.44f, 0.99f, -0.99f);
        pathBuilder.verticalLineToRelative(-0.01f);
        pathBuilder8.curveToRelative(0.0f, -0.55f, -0.44f, -0.99f, -0.99f, -0.99f);
        pathBuilder.horizontalLineToRelative(-1.01f);
        pathBuilder.curveToRelative(-0.55f, 0.0f, -0.99f, 0.44f, -0.99f, 0.99f);
        pathBuilder.close();
        pathBuilder.moveTo(12.0f, 5.5f);
        pathBuilder.curveToRelative(-3.31f, 0.0f, -6.0f, 2.69f, -6.0f, 6.0f);
        pathBuilder.reflectiveCurveToRelative(2.69f, 6.0f, 6.0f, 6.0f);
        pathBuilder.reflectiveCurveToRelative(6.0f, -2.69f, 6.0f, -6.0f);
        pathBuilder.reflectiveCurveToRelative(-2.69f, -6.0f, -6.0f, -6.0f);
        pathBuilder.close();
        pathBuilder.moveTo(11.99f, 22.45f);
        pathBuilder.lineTo(12.0f, 22.45f);
        pathBuilder.curveToRelative(0.55f, 0.0f, 0.99f, -0.44f, 0.99f, -0.99f);
        pathBuilder.verticalLineToRelative(-0.96f);
        PathBuilder pathBuilder9 = pathBuilder;
        pathBuilder9.curveToRelative(0.0f, -0.55f, -0.44f, -0.99f, -0.99f, -0.99f);
        pathBuilder.horizontalLineToRelative(-0.01f);
        pathBuilder9.curveToRelative(-0.55f, 0.0f, -0.99f, 0.44f, -0.99f, 0.99f);
        pathBuilder.verticalLineToRelative(0.96f);
        pathBuilder.curveToRelative(0.0f, 0.55f, 0.44f, 0.99f, 0.99f, 0.99f);
        pathBuilder.close();
        pathBuilder.moveTo(4.25f, 19.24f);
        PathBuilder pathBuilder10 = pathBuilder;
        pathBuilder10.curveToRelative(0.39f, 0.39f, 1.02f, 0.39f, 1.41f, 0.0f);
        pathBuilder.lineToRelative(0.39f, -0.39f);
        pathBuilder10.curveToRelative(0.39f, -0.39f, 0.38f, -1.02f, 0.0f, -1.4f);
        pathBuilder.lineToRelative(-0.01f, -0.01f);
        pathBuilder10.curveToRelative(-0.39f, -0.39f, -1.02f, -0.39f, -1.41f, 0.0f);
        pathBuilder.lineToRelative(-0.39f, 0.39f);
        pathBuilder10.curveToRelative(-0.38f, 0.4f, -0.38f, 1.02f, 0.01f, 1.41f);
        pathBuilder.close();
        ImageVector build = ImageVector.Builder.m3530addPathoIyEayM$default(builder, pathBuilder.getNodes(), VectorKt.getDefaultFillType(), "", new SolidColor(Color.Companion.m2847getBlack0d7_KjU(), (DefaultConstructorMarker) null), 1.0f, (Brush) null, 1.0f, 1.0f, r22, r23, 1.0f, 0.0f, 0.0f, 0.0f, 14336, (Object) null).build();
        _wbSunny = build;
        Intrinsics.checkNotNull(build);
        return build;
    }
}
