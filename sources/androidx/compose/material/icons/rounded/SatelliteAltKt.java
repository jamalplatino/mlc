package androidx.compose.material.icons.rounded;

import androidx.compose.material.icons.Icons;
import androidx.compose.ui.graphics.Brush;
import androidx.compose.ui.graphics.Color;
import androidx.compose.ui.graphics.SolidColor;
import androidx.compose.ui.graphics.StrokeCap;
import androidx.compose.ui.graphics.StrokeJoin;
import androidx.compose.ui.graphics.vector.ImageVector;
import androidx.compose.ui.graphics.vector.PathBuilder;
import androidx.compose.ui.graphics.vector.VectorKt;
import androidx.compose.ui.unit.Dp;
import kotlin.Metadata;
import kotlin.jvm.internal.DefaultConstructorMarker;
import kotlin.jvm.internal.Intrinsics;

@Metadata(d1 = {"\u0000\u0010\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\"\u0010\u0010\u0000\u001a\u0004\u0018\u00010\u0001X\u000e¢\u0006\u0002\n\u0000\"\u0015\u0010\u0002\u001a\u00020\u0001*\u00020\u00038F¢\u0006\u0006\u001a\u0004\b\u0004\u0010\u0005¨\u0006\u0006"}, d2 = {"_satelliteAlt", "Landroidx/compose/ui/graphics/vector/ImageVector;", "SatelliteAlt", "Landroidx/compose/material/icons/Icons$Rounded;", "getSatelliteAlt", "(Landroidx/compose/material/icons/Icons$Rounded;)Landroidx/compose/ui/graphics/vector/ImageVector;", "material-icons-extended-rounded_release"}, k = 2, mv = {1, 8, 0}, xi = 48)
/* compiled from: SatelliteAlt.kt */
public final class SatelliteAltKt {
    private static ImageVector _satelliteAlt;

    public static final ImageVector getSatelliteAlt(Icons.Rounded rounded) {
        Intrinsics.checkNotNullParameter(rounded, "<this>");
        ImageVector imageVector = _satelliteAlt;
        if (imageVector != null) {
            Intrinsics.checkNotNull(imageVector);
            return imageVector;
        }
        ImageVector.Builder builder = r1;
        ImageVector.Builder builder2 = new ImageVector.Builder("Rounded.SatelliteAlt", Dp.m5626constructorimpl(24.0f), Dp.m5626constructorimpl(24.0f), 24.0f, 24.0f, 0, 0, false, 224, (DefaultConstructorMarker) null);
        int r22 = StrokeCap.Companion.m3204getButtKaPHkGw();
        int r23 = StrokeJoin.Companion.m3214getBevelLxFBmk8();
        PathBuilder pathBuilder = new PathBuilder();
        pathBuilder.moveTo(20.95f, 14.88f);
        PathBuilder pathBuilder2 = pathBuilder;
        pathBuilder2.curveToRelative(-0.4f, 3.18f, -2.89f, 5.67f, -6.07f, 6.07f);
        pathBuilder2.curveTo(14.37f, 21.01f, 14.0f, 21.44f, 14.0f, 21.94f);
        pathBuilder2.curveToRelative(0.0f, 0.04f, 0.0f, 0.08f, 0.01f, 0.12f);
        pathBuilder2.curveToRelative(0.07f, 0.55f, 0.57f, 0.94f, 1.12f, 0.87f);
        pathBuilder2.curveToRelative(4.09f, -0.51f, 7.3f, -3.72f, 7.81f, -7.81f);
        pathBuilder2.curveToRelative(0.06f, -0.55f, -0.33f, -1.05f, -0.88f, -1.11f);
        pathBuilder2.curveTo(21.51f, 13.94f, 21.01f, 14.33f, 20.95f, 14.88f);
        pathBuilder.close();
        pathBuilder.moveTo(18.84f, 15.26f);
        PathBuilder pathBuilder3 = pathBuilder;
        pathBuilder3.curveToRelative(0.14f, -0.53f, -0.18f, -1.08f, -0.72f, -1.22f);
        pathBuilder3.curveToRelative(-0.54f, -0.14f, -1.08f, 0.18f, -1.22f, 0.72f);
        pathBuilder3.curveToRelative(-0.27f, 1.05f, -1.09f, 1.87f, -2.15f, 2.15f);
        pathBuilder3.curveTo(14.3f, 17.03f, 14.0f, 17.43f, 14.0f, 17.88f);
        pathBuilder3.curveToRelative(0.0f, 0.08f, 0.01f, 0.17f, 0.03f, 0.25f);
        pathBuilder3.curveToRelative(0.14f, 0.53f, 0.69f, 0.85f, 1.22f, 0.72f);
        pathBuilder3.curveTo(17.02f, 18.38f, 18.39f, 17.01f, 18.84f, 15.26f);
        pathBuilder.close();
        pathBuilder.moveTo(21.8f, 4.12f);
        pathBuilder.lineToRelative(-3.54f, -3.54f);
        PathBuilder pathBuilder4 = pathBuilder;
        pathBuilder4.curveToRelative(-0.78f, -0.78f, -2.05f, -0.78f, -2.83f, 0.0f);
        pathBuilder.lineToRelative(-3.18f, 3.18f);
        pathBuilder4.curveToRelative(-0.78f, 0.78f, -0.78f, 2.05f, 0.0f, 2.83f);
        pathBuilder.lineToRelative(1.24f, 1.24f);
        pathBuilder.lineToRelative(-0.71f, 0.71f);
        pathBuilder.lineTo(11.55f, 7.3f);
        PathBuilder pathBuilder5 = pathBuilder;
        pathBuilder5.curveToRelative(-0.78f, -0.78f, -2.05f, -0.78f, -2.83f, 0.0f);
        pathBuilder.lineTo(7.3f, 8.72f);
        pathBuilder5.curveToRelative(-0.78f, 0.78f, -0.78f, 2.05f, 0.0f, 2.83f);
        pathBuilder.lineToRelative(1.24f, 1.24f);
        pathBuilder.lineToRelative(-0.71f, 0.71f);
        pathBuilder.lineTo(6.6f, 12.25f);
        PathBuilder pathBuilder6 = pathBuilder;
        pathBuilder6.curveToRelative(-0.78f, -0.78f, -2.05f, -0.78f, -2.83f, 0.0f);
        pathBuilder.lineToRelative(-3.18f, 3.18f);
        pathBuilder6.curveToRelative(-0.78f, 0.78f, -0.78f, 2.05f, 0.0f, 2.83f);
        pathBuilder.lineToRelative(3.54f, 3.54f);
        pathBuilder6.curveToRelative(0.78f, 0.78f, 2.05f, 0.78f, 2.83f, 0.0f);
        pathBuilder.lineToRelative(3.18f, -3.18f);
        pathBuilder6.curveToRelative(0.78f, -0.78f, 0.78f, -2.05f, 0.0f, -2.83f);
        pathBuilder.lineToRelative(-1.24f, -1.24f);
        pathBuilder.lineToRelative(0.71f, -0.71f);
        pathBuilder.lineToRelative(1.24f, 1.24f);
        pathBuilder.curveToRelative(0.78f, 0.78f, 2.05f, 0.78f, 2.83f, 0.0f);
        pathBuilder.lineToRelative(1.41f, -1.41f);
        pathBuilder.curveToRelative(0.78f, -0.78f, 0.78f, -2.05f, 0.0f, -2.83f);
        pathBuilder.lineTo(13.84f, 9.6f);
        pathBuilder.lineToRelative(0.71f, -0.71f);
        pathBuilder.lineToRelative(1.24f, 1.24f);
        PathBuilder pathBuilder7 = pathBuilder;
        pathBuilder7.curveToRelative(0.78f, 0.78f, 2.05f, 0.78f, 2.83f, 0.0f);
        pathBuilder.lineToRelative(3.18f, -3.18f);
        pathBuilder7.curveTo(22.58f, 6.17f, 22.58f, 4.9f, 21.8f, 4.12f);
        pathBuilder.close();
        pathBuilder.moveTo(5.54f, 20.38f);
        pathBuilder.lineTo(2.0f, 16.85f);
        pathBuilder.lineToRelative(1.06f, -1.06f);
        pathBuilder.lineToRelative(3.54f, 3.54f);
        pathBuilder.lineTo(5.54f, 20.38f);
        pathBuilder.close();
        pathBuilder.moveTo(7.66f, 18.26f);
        pathBuilder.lineToRelative(-3.54f, -3.54f);
        pathBuilder.lineToRelative(1.06f, -1.06f);
        pathBuilder.lineToRelative(3.54f, 3.54f);
        pathBuilder.lineTo(7.66f, 18.26f);
        pathBuilder.close();
        pathBuilder.moveTo(17.2f, 8.72f);
        pathBuilder.lineToRelative(-3.54f, -3.54f);
        pathBuilder.lineToRelative(1.06f, -1.06f);
        pathBuilder.lineToRelative(3.54f, 3.54f);
        pathBuilder.lineTo(17.2f, 8.72f);
        pathBuilder.close();
        pathBuilder.moveTo(19.32f, 6.6f);
        pathBuilder.lineToRelative(-3.54f, -3.54f);
        pathBuilder.lineTo(16.85f, 2.0f);
        pathBuilder.lineToRelative(3.54f, 3.54f);
        pathBuilder.lineTo(19.32f, 6.6f);
        pathBuilder.close();
        ImageVector build = ImageVector.Builder.m3530addPathoIyEayM$default(builder, pathBuilder.getNodes(), VectorKt.getDefaultFillType(), "", new SolidColor(Color.Companion.m2847getBlack0d7_KjU(), (DefaultConstructorMarker) null), 1.0f, (Brush) null, 1.0f, 1.0f, r22, r23, 1.0f, 0.0f, 0.0f, 0.0f, 14336, (Object) null).build();
        _satelliteAlt = build;
        Intrinsics.checkNotNull(build);
        return build;
    }
}
