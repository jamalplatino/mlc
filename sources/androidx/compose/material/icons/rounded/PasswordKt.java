package androidx.compose.material.icons.rounded;

import androidx.compose.material.icons.Icons;
import androidx.compose.ui.graphics.Brush;
import androidx.compose.ui.graphics.Color;
import androidx.compose.ui.graphics.SolidColor;
import androidx.compose.ui.graphics.StrokeCap;
import androidx.compose.ui.graphics.StrokeJoin;
import androidx.compose.ui.graphics.vector.ImageVector;
import androidx.compose.ui.graphics.vector.PathBuilder;
import androidx.compose.ui.graphics.vector.VectorKt;
import androidx.compose.ui.unit.Dp;
import kotlin.Metadata;
import kotlin.jvm.internal.DefaultConstructorMarker;
import kotlin.jvm.internal.Intrinsics;

@Metadata(d1 = {"\u0000\u0010\n\u0000\n\u0002\u0018\u0002\n\u0000\n\u0002\u0018\u0002\n\u0002\b\u0003\"\u0010\u0010\u0000\u001a\u0004\u0018\u00010\u0001X\u000e¢\u0006\u0002\n\u0000\"\u0015\u0010\u0002\u001a\u00020\u0001*\u00020\u00038F¢\u0006\u0006\u001a\u0004\b\u0004\u0010\u0005¨\u0006\u0006"}, d2 = {"_password", "Landroidx/compose/ui/graphics/vector/ImageVector;", "Password", "Landroidx/compose/material/icons/Icons$Rounded;", "getPassword", "(Landroidx/compose/material/icons/Icons$Rounded;)Landroidx/compose/ui/graphics/vector/ImageVector;", "material-icons-extended-rounded_release"}, k = 2, mv = {1, 8, 0}, xi = 48)
/* compiled from: Password.kt */
public final class PasswordKt {
    private static ImageVector _password;

    public static final ImageVector getPassword(Icons.Rounded rounded) {
        Intrinsics.checkNotNullParameter(rounded, "<this>");
        ImageVector imageVector = _password;
        if (imageVector != null) {
            Intrinsics.checkNotNull(imageVector);
            return imageVector;
        }
        ImageVector.Builder builder = r1;
        ImageVector.Builder builder2 = new ImageVector.Builder("Rounded.Password", Dp.m5626constructorimpl(24.0f), Dp.m5626constructorimpl(24.0f), 24.0f, 24.0f, 0, 0, false, 224, (DefaultConstructorMarker) null);
        int r22 = StrokeCap.Companion.m3204getButtKaPHkGw();
        int r23 = StrokeJoin.Companion.m3214getBevelLxFBmk8();
        PathBuilder pathBuilder = new PathBuilder();
        pathBuilder.moveTo(3.0f, 17.0f);
        pathBuilder.horizontalLineToRelative(18.0f);
        PathBuilder pathBuilder2 = pathBuilder;
        pathBuilder2.curveToRelative(0.55f, 0.0f, 1.0f, 0.45f, 1.0f, 1.0f);
        pathBuilder.verticalLineToRelative(0.0f);
        pathBuilder2.curveToRelative(0.0f, 0.55f, -0.45f, 1.0f, -1.0f, 1.0f);
        pathBuilder.horizontalLineTo(3.0f);
        pathBuilder2.curveToRelative(-0.55f, 0.0f, -1.0f, -0.45f, -1.0f, -1.0f);
        pathBuilder.verticalLineToRelative(0.0f);
        pathBuilder2.curveTo(2.0f, 17.45f, 2.45f, 17.0f, 3.0f, 17.0f);
        pathBuilder.close();
        pathBuilder.moveTo(2.5f, 12.57f);
        pathBuilder2.curveToRelative(0.36f, 0.21f, 0.82f, 0.08f, 1.03f, -0.28f);
        pathBuilder.lineTo(4.0f, 11.47f);
        pathBuilder.lineToRelative(0.48f, 0.83f);
        pathBuilder2.curveToRelative(0.21f, 0.36f, 0.67f, 0.48f, 1.03f, 0.28f);
        pathBuilder.lineToRelative(0.0f, 0.0f);
        pathBuilder2.curveToRelative(0.36f, -0.21f, 0.48f, -0.66f, 0.28f, -1.02f);
        pathBuilder.lineTo(5.3f, 10.72f);
        pathBuilder.horizontalLineToRelative(0.95f);
        PathBuilder pathBuilder3 = pathBuilder;
        pathBuilder3.curveTo(6.66f, 10.72f, 7.0f, 10.38f, 7.0f, 9.97f);
        pathBuilder.verticalLineToRelative(0.0f);
        pathBuilder3.curveToRelative(0.0f, -0.41f, -0.34f, -0.75f, -0.75f, -0.75f);
        pathBuilder.horizontalLineTo(5.3f);
        pathBuilder.lineTo(5.77f, 8.4f);
        PathBuilder pathBuilder4 = pathBuilder;
        pathBuilder4.curveTo(5.98f, 8.04f, 5.86f, 7.58f, 5.5f, 7.37f);
        pathBuilder.lineToRelative(0.0f, 0.0f);
        pathBuilder4.curveTo(5.14f, 7.17f, 4.68f, 7.29f, 4.47f, 7.65f);
        pathBuilder.lineTo(4.0f, 8.47f);
        pathBuilder.lineTo(3.53f, 7.65f);
        PathBuilder pathBuilder5 = pathBuilder;
        pathBuilder5.curveTo(3.32f, 7.29f, 2.86f, 7.17f, 2.5f, 7.37f);
        pathBuilder.lineToRelative(0.0f, 0.0f);
        pathBuilder5.curveTo(2.14f, 7.58f, 2.02f, 8.04f, 2.23f, 8.4f);
        pathBuilder.lineTo(2.7f, 9.22f);
        pathBuilder.horizontalLineTo(1.75f);
        PathBuilder pathBuilder6 = pathBuilder;
        pathBuilder6.curveTo(1.34f, 9.22f, 1.0f, 9.56f, 1.0f, 9.97f);
        pathBuilder.verticalLineToRelative(0.0f);
        pathBuilder6.curveToRelative(0.0f, 0.41f, 0.34f, 0.75f, 0.75f, 0.75f);
        pathBuilder.horizontalLineTo(2.7f);
        pathBuilder.lineToRelative(-0.48f, 0.83f);
        pathBuilder6.curveTo(2.02f, 11.91f, 2.14f, 12.37f, 2.5f, 12.57f);
        pathBuilder.lineTo(2.5f, 12.57f);
        pathBuilder.close();
        pathBuilder.moveTo(10.5f, 12.57f);
        pathBuilder.lineTo(10.5f, 12.57f);
        pathBuilder.curveToRelative(0.36f, 0.21f, 0.82f, 0.08f, 1.03f, -0.28f);
        pathBuilder.lineTo(12.0f, 11.47f);
        pathBuilder.lineToRelative(0.48f, 0.83f);
        PathBuilder pathBuilder7 = pathBuilder;
        pathBuilder7.curveToRelative(0.21f, 0.36f, 0.67f, 0.48f, 1.03f, 0.28f);
        pathBuilder.lineToRelative(0.0f, 0.0f);
        pathBuilder7.curveToRelative(0.36f, -0.21f, 0.48f, -0.66f, 0.28f, -1.02f);
        pathBuilder.lineToRelative(-0.48f, -0.83f);
        pathBuilder.horizontalLineToRelative(0.95f);
        pathBuilder7.curveToRelative(0.41f, 0.0f, 0.75f, -0.34f, 0.75f, -0.75f);
        pathBuilder.verticalLineToRelative(0.0f);
        pathBuilder7.curveToRelative(0.0f, -0.41f, -0.34f, -0.75f, -0.75f, -0.75f);
        pathBuilder.horizontalLineTo(13.3f);
        pathBuilder.lineToRelative(0.47f, -0.82f);
        PathBuilder pathBuilder8 = pathBuilder;
        pathBuilder8.curveToRelative(0.21f, -0.36f, 0.08f, -0.82f, -0.27f, -1.03f);
        pathBuilder.lineToRelative(0.0f, 0.0f);
        pathBuilder8.curveToRelative(-0.36f, -0.21f, -0.82f, -0.08f, -1.02f, 0.27f);
        pathBuilder.lineTo(12.0f, 8.47f);
        pathBuilder.lineToRelative(-0.47f, -0.82f);
        pathBuilder8.curveToRelative(-0.21f, -0.36f, -0.67f, -0.48f, -1.02f, -0.27f);
        pathBuilder.lineToRelative(0.0f, 0.0f);
        pathBuilder8.curveToRelative(-0.36f, 0.21f, -0.48f, 0.67f, -0.27f, 1.03f);
        pathBuilder.lineToRelative(0.47f, 0.82f);
        pathBuilder.horizontalLineTo(9.75f);
        PathBuilder pathBuilder9 = pathBuilder;
        pathBuilder9.curveTo(9.34f, 9.22f, 9.0f, 9.56f, 9.0f, 9.97f);
        pathBuilder.verticalLineToRelative(0.0f);
        pathBuilder9.curveToRelative(0.0f, 0.41f, 0.34f, 0.75f, 0.75f, 0.75f);
        pathBuilder.horizontalLineToRelative(0.95f);
        pathBuilder.lineToRelative(-0.48f, 0.83f);
        pathBuilder.curveTo(10.02f, 11.91f, 10.14f, 12.37f, 10.5f, 12.57f);
        pathBuilder.close();
        pathBuilder.moveTo(23.0f, 9.97f);
        pathBuilder.curveToRelative(0.0f, -0.41f, -0.34f, -0.75f, -0.75f, -0.75f);
        pathBuilder.horizontalLineTo(21.3f);
        pathBuilder.lineToRelative(0.47f, -0.82f);
        PathBuilder pathBuilder10 = pathBuilder;
        pathBuilder10.curveToRelative(0.21f, -0.36f, 0.08f, -0.82f, -0.27f, -1.03f);
        pathBuilder.lineToRelative(0.0f, 0.0f);
        pathBuilder10.curveToRelative(-0.36f, -0.21f, -0.82f, -0.08f, -1.02f, 0.27f);
        pathBuilder.lineTo(20.0f, 8.47f);
        pathBuilder.lineToRelative(-0.47f, -0.82f);
        PathBuilder pathBuilder11 = pathBuilder;
        pathBuilder11.curveToRelative(-0.21f, -0.36f, -0.67f, -0.48f, -1.02f, -0.27f);
        pathBuilder.lineToRelative(0.0f, 0.0f);
        pathBuilder11.curveToRelative(-0.36f, 0.21f, -0.48f, 0.67f, -0.27f, 1.03f);
        pathBuilder.lineToRelative(0.47f, 0.82f);
        pathBuilder.horizontalLineToRelative(-0.95f);
        PathBuilder pathBuilder12 = pathBuilder;
        pathBuilder12.curveTo(17.34f, 9.22f, 17.0f, 9.56f, 17.0f, 9.97f);
        pathBuilder.verticalLineToRelative(0.0f);
        pathBuilder12.curveToRelative(0.0f, 0.41f, 0.34f, 0.75f, 0.75f, 0.75f);
        pathBuilder.horizontalLineToRelative(0.95f);
        pathBuilder.lineToRelative(-0.48f, 0.83f);
        PathBuilder pathBuilder13 = pathBuilder;
        pathBuilder13.curveToRelative(-0.21f, 0.36f, -0.08f, 0.82f, 0.28f, 1.02f);
        pathBuilder.lineToRelative(0.0f, 0.0f);
        pathBuilder13.curveToRelative(0.36f, 0.21f, 0.82f, 0.08f, 1.03f, -0.28f);
        pathBuilder.lineTo(20.0f, 11.47f);
        pathBuilder.lineToRelative(0.48f, 0.83f);
        PathBuilder pathBuilder14 = pathBuilder;
        pathBuilder14.curveToRelative(0.21f, 0.36f, 0.67f, 0.48f, 1.03f, 0.28f);
        pathBuilder.lineToRelative(0.0f, 0.0f);
        pathBuilder14.curveToRelative(0.36f, -0.21f, 0.48f, -0.66f, 0.28f, -1.02f);
        pathBuilder.lineToRelative(-0.48f, -0.83f);
        pathBuilder.horizontalLineToRelative(0.95f);
        pathBuilder.curveTo(22.66f, 10.72f, 23.0f, 10.38f, 23.0f, 9.97f);
        pathBuilder.lineTo(23.0f, 9.97f);
        pathBuilder.close();
        ImageVector build = ImageVector.Builder.m3530addPathoIyEayM$default(builder, pathBuilder.getNodes(), VectorKt.getDefaultFillType(), "", new SolidColor(Color.Companion.m2847getBlack0d7_KjU(), (DefaultConstructorMarker) null), 1.0f, (Brush) null, 1.0f, 1.0f, r22, r23, 1.0f, 0.0f, 0.0f, 0.0f, 14336, (Object) null).build();
        _password = build;
        Intrinsics.checkNotNull(build);
        return build;
    }
}
